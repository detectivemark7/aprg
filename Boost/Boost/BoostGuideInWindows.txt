Sources:

https://gist.github.com/sim642/29caef3cc8afaa273ce6
https://www.boost.org/doc/libs/1_51_0/more/getting_started/windows.html
https://cmake.org/cmake/help/v3.8/module/FindBoost.html



Installing boost libraries for GCC (MinGW) on Windows APRG

->Folder setup
1) Extract downloaded boost source, e.g. boost_1_59_0 to "aprg\Boost\Boost\boost"
---> "aprg\Boost\Boost\boost\boost\accumulators" should exist
2) Create a folder for Boost.Build installation, e.g. "aprg\Boost\Boost\boost-build"
3) Create a folder within for building, i.e. "aprg\Boost\Boost\boost\build".
4) Use the boost folder for installation, e.g. "aprg\Boost\Boost\boost".

->GCC setup
1) Open Command Prompt.
2) Run gcc --version.
3) If the output contains g++ version number then GCC should be set up properly to run from command line and you can continue.
4) The QT GCC compiler is located in: "C:\Qt\Qt5.9.2\Tools\mingw530_32\bin". Add this in path for gcc to be visible in command line.

-> Boost.Build setup
1) Open Command Prompt and navigate to "aprg\Boost\Boost\boost\tools\build".
2) Run 
-> bootstrap.bat gcc"
3) Run 
-> b2 install --prefix="xxxxx\aprg\Boost\Boost\boost-build"
4) Add "xxxxx\aprg\Boost\Boost\boost-build" to Windows PATH. So we can use "b2" anywhere.
NOTE: Remember to replace the xxxxx!!!

-> boost building
1) Open Command Prompt and navigate to "aprg\Boost\Boost\boost".
2) Run:
---> b2 --build-dir="xxxxx\aprg\Boost\Boost\boost\build" --prefix="xxxxx\aprg\Boost\Boost\boost" toolset=gcc install
2.1) The option “--build-type=complete” causes Boost.Build to build all supported variants of the libraries. 
2.2) In particular, to limit the amount of time spent building, you may be interested in:
----> reviewing the list of library names with --show-libraries
----> limiting which libraries get built with the --with-library-name or --without-library-name options
----> choosing a specific build variant by adding release or debug to the command line.
NOTE: Remember to replace the xxxxx!!!



-> create boost libraries
1) Open Command Prompt and go to "aprg\Boost\Boost\boost".
2) Header-Only Libraries
---> The first thing many people want to know is, “how do I build Boost?” The good news is that often, there's nothing to build.
---> Most Boost libraries are header-only: they consist entirely of header files containing templates and inline functions, and require no separately-compiled library binaries or special treatment when linking.
3) Libraries that needs to built
---> The "-show-libraries" flag will display a list of libraries that can be built. For example:
-----> b2 --show-libraries
4) Create and install
---> create and install the library using b2 by a flag "-with-NameOfLibrary" during install command. For example:
-----> b2 install --prefix=xxxxx\aprg\Boost\Boost\boost --with-system --with-locale --with-filesystem --with-iostreams --with-date_time --with-random link=static runtime-link=shared threading=multi toolset=gcc
---> The libraries will be generated on "aprg\Boost\Boost\boost\lib" folder
NOTE: Remember to replace the xxxxx!!!
5) Add library on boost cmake
---> Open "aprg\Boost\Boost\cmake\IncludeBoost.cmake" and add library during searching for boost.
-----> Edit this line: "find_package(Boost COMPONENTS system locale filesystem iostreams)"

-> Project setup
1) Add include folder, i.e. C:\Program Files\boost\include\boost-1_59.
---> "aprg\Boost\Boost\cmake\IncludeBoost.cmake" should contain:
-----> set(BOOST_INCLUDEDIR    ${BOOST_DIR}/)
2) Add linker folder, i.e. C:\Program Files\boost\lib..
---> "aprg\Boost\Boost\cmake\IncludeBoost.cmake" should contain:
-----> set(BOOST_LIBRARYDIR    ${BOOST_DIR}/boost/lib)
3) Run cmake and double check that required libraries are linked properly (no error messages)


